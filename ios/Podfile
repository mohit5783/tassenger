require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
use_modular_headers!
use_expo_modules!

install! 'cocoapods', :deterministic_uuids => false

prepare_react_native_project!

# Fix for nanopb version conflict
pod 'nanopb', '~> 3.30910.0'

target 'Tassenger' do
  use_expo_modules!
  config = use_native_modules!

  # Firebase version pinning
  pod 'Firebase/CoreOnly', '11.10.0'
  pod 'Firebase/Core', '11.10.0'
  pod 'FirebaseCore', '11.10.0'

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  # Hermes + new architecture config
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'].nil? || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # Remove duplicate React-Core_privacy.bundle issue
    installer.aggregate_targets.each do |aggregate_target|
      aggregate_target.user_project.native_targets.each do |native_target|
        native_target.build_phases.each do |build_phase|
          next unless build_phase.respond_to?(:files) && build_phase.files

          build_phase.files.delete_if do |file|
            file.display_name.include?("React-Core_privacy.bundle")
          end
        end
      end
    end

    # Additional fix for nanopb
    installer.pods_project.targets.each do |target|
      if target.name == 'nanopb'
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
        end
      end
    end
  end
end
